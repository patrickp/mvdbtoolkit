SUBROUTINE MVDBTOOLKIT.WOBJ.DELETE(ACTION,NODE,VALUE,RERR)
**********************************************************************
*
* Copyright (C) 2017 Zumasys, Inc., All Rights Reserved
*
* Written by: Patrick Payne, Zumasys
* Date: December 2017
* Description: delete a json node in parsed object structure
*
**********************************************************************
*
INCLUDE MVDBTOOLKIT.WOBJ.INCLUDE
*
VALUE=""
DONE=0
LOOP
    CALL MVDBTOOLKIT.WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)
    IF WOBJ.DEBUG THEN PRINT "WOBJ.DELETE: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" RERROR=":RERR<2>
    IF NOT(NODEPOS) OR NOT(PARTPOS) THEN
        RERR=1
        RERR<2>="Node not found"
        RETURN
    END
    
    NODETYPE = JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>
    BEGIN CASE

        CASE NODETYPE = 'O' AND CHILDPOS > 0

* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODE
            NEST.COUNT = 0
            NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,CHILDPOS>
            FOR I=1 TO NUM.PARTS
                PARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,CHILDPOS,I>
                IF PARTTYPE = 'O' OR PARTTYPE = 'A' THEN
                    PARTKEY=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,CHILDPOS,I>
                    CALL MVDBTOOLKIT.WOBJ.DELETE(ACTION,NODE:".":PARTKEY,VALUE,RERR)
                    NEST.COUNT += 1
                    EXIT ;* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAIN
                END
            NEXT I

            IF NEST.COUNT = 0 THEN
* DELETE OBJECT NODE
                JSONOBJECT(JSONOBJECT$NODETYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODETYPE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODELENGTH)=DELETE(JSONOBJECT(JSONOBJECT$NODELENGTH),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODECNTR) -= 1

* ADJUST LINKS TO ACCOUNT FOR DELETED NODE
                NUM.NODES = JSONOBJECT(JSONOBJECT$NODECNTR)
                FOR I = 1 TO NUM.NODES
                    NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,I>
                    FOR J = 1 TO NUM.PARTS
                        FLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J>
                        IF FLINK >= CHILDPOS THEN
                            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J> = FLINK - 1
                        END
                        BLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J>
                        IF BLINK >= CHILDPOS THEN
                            JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J> = BLINK - 1
                        END
                    NEXT J
                NEXT I
                DONE = 1
            END

        CASE NODETYPE = 'A' AND CHILDPOS > 0

* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODE
            NEST.COUNT = 0
            NUM.ELEMS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,CHILDPOS>
            FOR I = 1 TO NUM.ELEMS
                PARTTYPE = JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,CHILDPOS,I>
                IF PARTTYPE = 'O' OR PARTTYPE = 'A' THEN
* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODE
                    CALL MVDBTOOLKIT.WOBJ.DELETE(ACTION,NODE:"[":(I-1):"]",VALUE,RERR)
                    NEST.COUNT += 1
                    EXIT ;* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAIN
                END
            NEXT I

* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAIN
            IF NEST.COUNT = 0 THEN
* DELETE ARRAY NODE
                JSONOBJECT(JSONOBJECT$NODETYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODETYPE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODELENGTH)=DELETE(JSONOBJECT(JSONOBJECT$NODELENGTH),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,CHILDPOS)
                JSONOBJECT(JSONOBJECT$NODECNTR) -= 1

* ADJUST LINKS TO ACCOUNT FOR DELETED NODE
                NUM.NODES = JSONOBJECT(JSONOBJECT$NODECNTR)
                FOR I = 1 TO NUM.NODES
                    NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,I>
                    FOR J = 1 TO NUM.PARTS
                        FLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J>
                        IF FLINK >= CHILDPOS THEN
                            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J> = FLINK - 1
                        END
                        BLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J>
                        IF BLINK >= CHILDPOS THEN
                            JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J> = BLINK - 1
                        END
                    NEXT J
                NEXT I
                DONE = 1
            END

        CASE 1
            DONE = 1
    END CASE
UNTIL DONE DO REPEAT

* DELETE SIMPLE NODE
JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,NODEPOS,PARTPOS)
JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> -= 1
*
RETURN
END
