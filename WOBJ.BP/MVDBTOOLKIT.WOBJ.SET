SUBROUTINE MVDBTOOLKIT.WOBJ.SET(ACTION,NODE,VALUE,RERR)
**********************************************************************
*
* Copyright (C) 2017 Zumasys, Inc., All Rights Reserved
*
* Written by: Patrick Payne, Zumasys
* Date: December 2017
* Description: set json node to value
*
* Modified by: Peter Schellenbach, Zumasys
* Date: January 2018
* Description: allow Object and Array properties to be set, passing
*   a JSON string representation of the node.
*
**********************************************************************
*
INCLUDE MVDBTOOLKIT.WOBJ.INCLUDE
*
IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: NODE=":NODE:" ACTION=":ACTION
*
SACTION=FIELD(ACTION,".",2)
IF NODE="" THEN
    IF SACTION <> "OBJECT" THEN    
        RERR=1
        RERR<2>="Node cannot be null"
    END ELSE
        CALL MVDBTOOLKIT.WOBJ.PARSE(VALUE,NEWOBJ)
        IF PSERRORS#"" THEN
            RERR=2
            RERR<2> = PSERRORS
            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.OBJECT: parse failure: ":RERR<2>
        END
    END        
    RETURN
END
*
CALL MVDBTOOLKIT.WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)
IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" LASTNODE=":LASTNODE:" RERROR=":RERR<2>
*
IF NOT(NODEPOS) THEN
    RERR=1
    RERR<2>="Node not found"
    RETURN
END
*
* CHECK THE NODE WE ARE SETTING PROPERTY TO
NODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEPOS>
IF NODETYPE#"O" AND NODETYPE#"A" THEN
    RERR=1
    RERR<2>="Parent node must be an object or array"
    RETURN
END
*
IGNORE.RERR=""
IF NODETYPE="O" THEN PARTKEY=LASTNODE ELSE PARTKEY=""
*
IF NOT(PARTPOS) THEN
* ENSURE PARENT NODE EXISTS
    NUM.PARTS=DCOUNT(NODE,".")
    FINAL.NODE=FIELD(NODE,".",NUM.PARTS)
    IF INDEX(FINAL.NODE,"[",1) THEN
        NUMBER.ARRAYS=COUNT(FINAL.NODE,"[")
        PARENT.NODE=NODE[1,LEN(NODE)-LEN(FINAL.NODE)+INDEX(FINAL.NODE,"[",NUMBER.ARRAYS)-1]
    END ELSE
        NUMBER.ARRAYS=0
        PARENT.NODE=NODE[1,LEN(NODE)-LEN(FINAL.NODE)-1]
    END
    IF NUM.PARTS > 1 OR NUMBER.ARRAYS > 0 THEN
        CALL MVDBTOOLKIT.WOBJ.FINDNODE(PARENT.NODE,PARENT.NODEPOS,PARENT.PARTPOS,PARENT.CHILDPOS,PARENT.LASTNODE,"")
        IF NOT(PARENT.PARTPOS) THEN
            RERR=1
            RERR<2>="Parent node not found"
            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>
            RETURN
        END
    END
*
* WE NEED TO ADD A NEW ELEMENT
    IF NODETYPE="O" THEN
        PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>
        PARTPOS += 1
        JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOS
        CALL MVDBTOOLKIT.WOBJ.SET.PART(NODEPOS,PARTPOS,"N",PARTKEY,"",IGNORE.RERR) ; * DUMMY NULL ELEMENT WILL BE REPLACED IN FINAL WOBJ.SET.PART CALL
    END ELSE
        NUMBER.ARRAYS=COUNT(LASTNODE,"[")
        ST=INDEX(LASTNODE,"[",NUMBER.ARRAYS)
        EN=INDEX(LASTNODE,"]",NUMBER.ARRAYS)
        IF ST>1 AND EN>ST THEN
            PARTPOS=LASTNODE[ST+1,EN-ST-1]
        END ELSE
            PARTPOS=''
        END
        IF NOT((PARTPOS MATCHES '1N0N') OR (PARTPOS = '-1')) THEN
            RERR=2
            RERR<2>="Numeric subscript required for setting array element"
            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>
            RETURN
        END
        IF PARTPOS<0 THEN
            PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>+1
        END ELSE
            PARTPOS += 1 ; * ZERO-BASED ARRAY INDEX -> 1 BASED PARTPOS
        END
        LASTPARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>+1
        FOR P=LASTPARTPOS TO PARTPOS
            CALL MVDBTOOLKIT.WOBJ.SET.PART(NODEPOS,P,"N",PARTKEY,"",IGNORE.RERR)
        NEXT P
        IF PARTPOS>JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> THEN
            JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOS
        END
    END
END
*
PARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>
IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: PARTTYPE=":PARTTYPE
*
IF PARTTYPE="O" OR PARTTYPE="A" THEN
*
* DELETE NESTED NODE BEFORE SETTING NEW VALUE
    IF NODETYPE="A" THEN
*
* ARRAYS ARE SPECIAL, BECAUSE WE DO NOT WANT TO DELETE THE ARRAY POSITION
* THAT WE ARE SETTING, WHICH WILL SLIDE THE ARRAY DOWN BY ONE. INSTEAD,
* INSERT A NULL ELEMENT AFTER THE ONE WE NEED TO DELETE, THEN AFTER
* DELETING, WE CAN SIMPLY REPLACE THE NULL NODE.
*
        JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,NODEPOS,PARTPOS+1,"")
        JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,NODEPOS,PARTPOS+1,"N")
        JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,NODEPOS,PARTPOS+1,"")
        JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,NODEPOS,PARTPOS+1,"")
        JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,NODEPOS,PARTPOS+1,"")
        JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,NODEPOS,PARTPOS+1,"")
        JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> += 1
    END
*
    CALL MVDBTOOLKIT.WOBJ.DELETE("DELETE",NODE,"",IGNORE.RERR)
* BECAUSE DELETING MAY ALTER JSONOBJECT STRUCTURE, REFRESH NODEPOS & PARTPOS
    CALL MVDBTOOLKIT.WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,IGNORE.RERR)
    IF NODETYPE="O" THEN
        IF PARTPOS=0 THEN
            PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>
            PARTPOS += 1
            JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOS
            CALL MVDBTOOLKIT.WOBJ.SET.PART(NODEPOS,PARTPOS,"N",PARTKEY,"",IGNORE.RERR)
        END ELSE
            RERR=2
            RERR<2>="While setting node ":NODE:", existing object was deleted, yet it is still here!"
            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>
            RETURN
        END
    END ELSE
        IF PARTPOS=0 THEN
            RERR=2
            RERR<2>="While setting node ":NODE:", existing array element was deleted, but dummy element is missing!"
            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>
            RETURN
        END
    END
END
*
* NOW WE ARE SAFE TO SET NEW VALUE
BEGIN CASE
    CASE SACTION="ARRAY" OR SACTION="OBJECT"
        PARTTYPE=SACTION[1,1]
    CASE SACTION="NULL"
        PARTTYPE="N"
    CASE SACTION="NUMBER"
        PARTTYPE="D"
    CASE SACTION="BOOLEAN"
        PARTTYPE="B"
    CASE SACTION="STRING" OR SACTION=""
        PARTTYPE="S"
    CASE 1
        RERR=1
        RERR<2>="Unknown value type ":SACTION:", assume STRING"
        PARTTYPE="S"
END CASE
CALL MVDBTOOLKIT.WOBJ.SET.PART(NODEPOS,PARTPOS,PARTTYPE,PARTKEY,VALUE,RERR)
RETURN
END
