SUBROUTINE MVDBTOOLKIT.WFILEIO(INOBJ)
**********************************************************************
*
* Copyright (C) 2017 Zumasys, Inc., All Rights Reserved
*
* Written by: Patrick Payne, Zumasys
* Date: June 7th 2018
* Description: WFILEIO MULTI PLATFORM WORKING WITH O/S FILES
*
**********************************************************************
*
* INOBJ
*
* { "ACTION":"READ,WRITE,DELETE",
*   "PATH":"PATH TO THE FILE",
*   "DATA":"DATA FOR A WRITE",
*   "dosletter":"OPTIONAL DOS LETTER TO ADD TO PATH",
*   "NEWLINE":"CR,LF,CRLF,DOS,UNIX",
*   "PERMISSIONS":"TBD"
*   "response": {
*       "data":"responsedata",
*       "status":1-ok, else no,
*       "statusmsg":"statusmsg" 
*   }
* }
*
* need to know the existing platform

*PLATFORM.DELIM="\"
*PLATFORM.TYPE="WINDOWS"
*PLATFORM.MV="D3"

CALL MVDBTOOLKIT.WPLATFORM(POBJ)

CALL MVDBTOOLKIT.WOBJ(POBJ,"GET","mvtype",PLATFORM.MV,"",RERR)
CALL MVDBTOOLKIT.WOBJ(POBJ,"GET","filedelim",PLATFORM.DELIM,"",RERR)
CALL MVDBTOOLKIT.WOBJ(POBJ,"GET","platform",PLATFORM.TYPE,"",RERR)

FSTATUS=1
FSTATUSMSG="OK"

CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","action",FILEIO.ACTION,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","path",FILEIO.PATH,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","data",FILEIO.DATA,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","dosletter",FILEIO.DOSLETTER,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","newline",FILEIO.NEWLINE,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"GET","permissions",FILEIO.PERMISSIONS,"",RERR)

*CALL MVDBTOOLKIT.WOBJ(OUTOBJ,"FROMSTRING","","{}","",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET.OBJECT","response","{}","",RERR)

FILEIO.ACTION=OCONV(FILEIO.ACTION,"MCU")
FILEIO.NEWLINE=OCONV(FILEIO.NEWLINE,"MCU")

IF FILEIO.ACTION = "" THEN
    FSTATUS=0
    FSTATUSMSG="No action defined"
    GOTO end.of.run
END

IF FILEIO.PATH = "" THEN
    FSTATUS=0
    FSTATUSMSG="No path defined"
    GOTO end.of.run
END

PARSED.FILEIO.PATH=""
L=LEN(FILEIO.PATH)
FOR X=1 TO L
   C=FILEIO.PATH[X,1]
   IF C=PLATFORM.DELIM THEN
      PARSED.FILEIO.PATH:=@AM
   END ELSE
      PARSED.FILEIO.PATH:=C
   END
NEXT X

*PARSED.FILEIO.PATH=EXCHANGE(FILEIO.PATH,PLATFORM.DELIM,@AM)
PARSED.FILEIO.PATH=FILEIO.PATH
CONVERT PLATFORM.DELIM TO @AM IN PARSED.FILEIO.PATH
PARSED.FILEIO.PARTS=DCOUNT(PARSED.FILEIO.PATH,@AM)

* JBASE DOES NOT APPEAR TO HONOR WINDOWS ENVIROMENT VARIABLES IN THE OPEN
* THIS IS MAKING %USERPROFILE% NOT WORK
*
* WE ARE GOING TO LOOP THRU THE THE PARTS AN EXPAND THEM OURSELVES
*
* THIS HAS BEEN TESTED ON JBASE WINDOWS SO FAR.
*
FOR P=1 TO PARSED.FILEIO.PARTS
    THIS.PART=PARSED.FILEIO.PATH<P>
    IF THIS.PART[1,1]='%' OR THIS.PART[1,1]="$" THEN
        CONVERT '%$' TO '' IN THIS.PART
 * 9/4/2019 PAP Modified this to use mvdbtoolkit.wgetenv
 
 *       IF GETENV(THIS.PART,NEW.THIS.PART) THEN
 *           PARSED.FILEIO.PATH<P>=NEW.THIS.PART
 *       END
         CALL MVDBTOOLKIT.WGETENV(THIS.PART,NEW.THIS.PART)
         IF NEW.THIS.PART # "" THEN PARSED.FILEIO.PATH<P>=NEW.THIS.PART
    END
NEXT P


PARSED.FILEIO.FILE.NAME=PARSED.FILEIO.PATH<PARSED.FILEIO.PARTS>
FILEIO.JUST.PATH=DELETE(PARSED.FILEIO.PATH,PARSED.FILEIO.PARTS)
*FILEIO.JUST.PATH=EXCHANGE(FILEIO.JUST.PATH,@AM,PLATFORM.DELIM)

CONVERT @AM TO PLATFORM.DELIM IN FILEIO.JUST.PATH


CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET.OBJECT","work","{}","",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET","work.parsed_fileio_file_name",PARSED.FILEIO.FILE.NAME,"",RERR)

CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET","work.fileio_just_path",FILEIO.JUST.PATH,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET","work.platform",PLATFORM.TYPE,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET","work.mvtype",PLATFORM.MV,"",RERR)
CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET","work.filedelim",PLATFORM.DELIM,"",RERR)

CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET.OBJECT","response","{}","",RERR)
* lets have a seperate routine for each platform

BEGIN CASE
    CASE FILEIO.ACTION="READ"
    CASE FILEIO.ACTION="WRITE"
    CASE FILEIO.ACTION="DELETE"
    CASE 1
        FSTATUS=0
        FSTATUSMSG="Invalid action"
        CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET.NUMBER", "response.status", FSTATUS,"",RERR)
        CALL MVDBTOOLKIT.WOBJ(INOBJ,"SET.STRING", "response.statusmsg", FSTATUSMSG, "", RERR)
        GOTO end.of.run
END CASE

BEGIN CASE
    CASE PLATFORM.MV="D3"
        FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.D3"
        CALL MVDBTOOLKIT.WFILEIO.D3(INOBJ)
    CASE PLATFORM.MV="JBASE"
        FILEIO.RTNE="MVDBTOOLKIT.W.FILEIO.JBASE"
        CALL MVDBTOOLKIT.WFILEIO.JBASE(INOBJ)
    CASE PLATFORM.MV="UNIVERSE"
        FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.UNIVERSE"
        CALL MVDBTOOLKIT.WFILEIO.UNIVERSE(INOBJ)
    CASE PLATFORM.MV="UNIDATA"
        FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.UNIDATA"
        CALL MVDBTOOLKIT.WFILEIO.UNIDATA(INOBJ)
    CASE PLATFORM.MV="QM"
        * QM SUPPORTS OPENPATH
        CALL MVDBTOOLKIT.WFILEIO.UNIVERSE(INOBJ)
   CASE 1
        DEBUG
        FSTATUS=0
        FSTATUSMSG="Invalid Platform ":PLATFORM.MV
        GOTO end.of.run
END CASE

end.of.run: *

RETURN
